{
	// Place your CommanderBot workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Slash Command": {
		"scope": "javascript,typescript",
		"prefix": "slash",
		"body": [
			"const { SlashCommandBuilder } = require('discord.js');",
			"",
			"module.exports = {"
				"data: new SlashCommandBuilder()"
					".setName('$1')"
					".setDescription('$2'),"
				"async execute(interaction) {"
					"$0"
				"},"
			"};"
		],
		"description": "Boilerplate for a slash command"
	},
	"Cooldown Command": {
		"scope": "javascript,typescript",
		"prefix": "cooldown slash",
		"body": [
			"const { SlashCommandBuilder } = require('discord.js');",
			"",
			"module.exports = {"
				"\tcooldown: $3, // Seconds",
				"\tdata: new SlashCommandBuilder()"
					"\t\t.setName('$1')"
					"\t\t.setDescription('$2'),"
				"\tasync execute(interaction) {"
					"\t\t$0"
				"\t},"
			"};"
		],
		"description": "Boilerplate for a slash command with a cooldown"
	},
	"Reply": {
		"scope": "javascript,typescript",
		"prefix": "reply",
		"body": [
			"await interaction.reply('$0');"
		]
	},
	"Ephemeral Reply": {
		"scope": "javascript,typescript",
		"prefix": "ephemeral reply",
		"body": [
			"await interaction.reply({ content: '$0', ephemeral: true });"
		]
	},
	"Private Reply": {
		"scope": "javascript,typescript",
		"prefix": "private reply",
		"body": [
			"await interaction.reply({ content: '$0', ephemeral: true });"
		]
	},
}